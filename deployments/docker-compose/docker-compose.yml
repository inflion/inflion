version: "3.7"

services:
  inflionserver:
    build:
      context: ./
      dockerfile: ./Dockerfile
    command: -c .air.d/.inflionserver.air.conf
    depends_on:
      - db
      - nsqd
      - etcd
      - jobserver
    ports:
      - "50051:50051"
    volumes:
      - ../../.:/go/src/github.com/inflion/inflion
    restart: always
    environment:
      DB_HOST: "${DB_HOST}"
      DB_DATABASE: "${DB_DATABASE}"
      DB_USERNAME: "${DB_USERNAME}"
      DB_PASSWORD: "${DB_PASSWORD}"
      DB_PORT: ${DB_INTERNAL_PORT}
      AWS_SDK_LOAD_CONFIG: 0
      AWS_DEFAULT_REGION: ${AWS_REGION}
      AWS_REGION: ${AWS_REGION}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      ETCD_ENDPOINTS: ${ETCD_ENDPOINTS}
      JOB_SERVER_ENDPOINT: ${JOB_SERVER_ENDPOINT}
      RUN_ENV: dev

  jobserver:
    build:
      context: ./
      dockerfile: ./Dockerfile
    command: -c .air.d/.jobserver.air.conf
    depends_on:
      - db
      - nsqd
      - etcd
    ports:
      - "50052:50051"
    volumes:
      - ../../.:/go/src/github.com/inflion/inflion
    restart: always
    environment:
      DB_HOST: "${DB_HOST}"
      DB_DATABASE: "${DB_DATABASE}"
      DB_USERNAME: "${DB_USERNAME}"
      DB_PASSWORD: "${DB_PASSWORD}"
      DB_PORT: ${DB_INTERNAL_PORT}
      AWS_SDK_LOAD_CONFIG: 0
      AWS_DEFAULT_REGION: ${AWS_REGION}
      AWS_REGION: ${AWS_REGION}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      ETCD_ENDPOINTS: ${ETCD_ENDPOINTS}
      RUN_ENV: dev

  collector:
    build:
      context: ./
      dockerfile: ./Dockerfile
    command: -c .air.d/.collector.air.conf
    depends_on:
      - db
      - nsqd
    volumes:
      - ../../.:/go/src/github.com/inflion/inflion
    restart: always
    environment:
      DB_HOST: "${DB_HOST}"
      DB_DATABASE: "${DB_DATABASE}"
      DB_USERNAME: "${DB_USERNAME}"
      DB_PASSWORD: "${DB_PASSWORD}"
      DB_PORT: ${DB_INTERNAL_PORT}
      AWS_SDK_LOAD_CONFIG: 0
      AWS_DEFAULT_REGION: ${AWS_REGION}
      AWS_REGION: ${AWS_REGION}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      RUN_ENV: dev

  consumer:
    build:
      context: ./
      dockerfile: ./Dockerfile
    command: -c .air.d/.consumer.air.conf
    depends_on:
      - timescale
      - nsqd
    volumes:
      - ../../.:/go/src/github.com/inflion/inflion
    restart: always
    environment:
      TIMESCALE_DB_HOST: "${TIMESCALE_DB_HOST}"
      TIMESCALE_DB_DATABASE: "${TIMESCALE_DB_DATABASE}"
      TIMESCALE_DB_USERNAME: "${TIMESCALE_DB_USERNAME}"
      TIMESCALE_DB_PASSWORD: "${TIMESCALE_DB_PASSWORD}"
      TIMESCALE_DB_PORT: ${TIMESCALE_DB_INTERNAL_PORT}
      ETCD_ENDPOINTS: ${ETCD_ENDPOINTS}
      RUN_ENV: dev

  monitor:
    build:
      context: ./
      dockerfile: ./Dockerfile
    command: -c .air.d/.monitor.air.conf
    depends_on:
      - db
      - timescale
      - nsqd
    volumes:
      - ../../.:/go/src/github.com/inflion/inflion
    restart: always
    environment:
      DB_HOST: "${DB_HOST}"
      DB_DATABASE: "${DB_DATABASE}"
      DB_USERNAME: "${DB_USERNAME}"
      DB_PASSWORD: "${DB_PASSWORD}"
      DB_PORT: ${DB_INTERNAL_PORT}
      TIMESCALE_DB_HOST: "${TIMESCALE_DB_HOST}"
      TIMESCALE_DB_DATABASE: "${TIMESCALE_DB_DATABASE}"
      TIMESCALE_DB_USERNAME: "${TIMESCALE_DB_USERNAME}"
      TIMESCALE_DB_PASSWORD: "${TIMESCALE_DB_PASSWORD}"
      TIMESCALE_DB_PORT: ${TIMESCALE_DB_INTERNAL_PORT}
      AWS_DEFAULT_REGION: ${AWS_REGION}
      AWS_REGION: ${AWS_REGION}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      RUN_ENV: dev

  syncer:
    build:
      context: ./
      dockerfile: ./Dockerfile
    command: -c .air.d/.syncer.air.conf
    depends_on:
      - db
      - timescale
      - nsqd
    volumes:
      - ../../.:/go/src/github.com/inflion/inflion
    restart: always
    environment:
      DB_HOST: "${DB_HOST}"
      DB_DATABASE: "${DB_DATABASE}"
      DB_USERNAME: "${DB_USERNAME}"
      DB_PASSWORD: "${DB_PASSWORD}"
      DB_PORT: ${DB_INTERNAL_PORT}
      TIMESCALE_DB_HOST: "${TIMESCALE_DB_HOST}"
      TIMESCALE_DB_DATABASE: "${TIMESCALE_DB_DATABASE}"
      TIMESCALE_DB_USERNAME: "${TIMESCALE_DB_USERNAME}"
      TIMESCALE_DB_PASSWORD: "${TIMESCALE_DB_PASSWORD}"
      TIMESCALE_DB_PORT: ${TIMESCALE_DB_INTERNAL_PORT}
      AWS_DEFAULT_REGION: ${AWS_REGION}
      AWS_REGION: ${AWS_REGION}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      RUN_ENV: dev

  broker:
    build:
      context: ./
      dockerfile: ./Dockerfile
    command: -c .air.d/.broker.air.conf
    depends_on:
      - db
      - timescale
      - nsqd
    volumes:
      - ../../.:/go/src/github.com/inflion/inflion
    restart: always
    environment:
      DB_HOST: "${DB_HOST}"
      DB_DATABASE: "${DB_DATABASE}"
      DB_USERNAME: "${DB_USERNAME}"
      DB_PASSWORD: "${DB_PASSWORD}"
      DB_PORT: ${DB_INTERNAL_PORT}
      TIMESCALE_DB_HOST: "${TIMESCALE_DB_HOST}"
      TIMESCALE_DB_DATABASE: "${TIMESCALE_DB_DATABASE}"
      TIMESCALE_DB_USERNAME: "${TIMESCALE_DB_USERNAME}"
      TIMESCALE_DB_PASSWORD: "${TIMESCALE_DB_PASSWORD}"
      TIMESCALE_DB_PORT: ${TIMESCALE_DB_INTERNAL_PORT}
      NSQLOOKUPD_HOST: ${NSQLOOKUPD_HOST}
      NSQLOOKUPD_PORT: ${NSQLOOKUPD_PORT}
      AWS_DEFAULT_REGION: ${AWS_REGION}
      AWS_REGION: ${AWS_REGION}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      ETCD_ENDPOINTS: ${ETCD_ENDPOINTS}
      RUN_ENV: dev

  db:
    image: postgres:12.1
    environment:
      POSTGRES_USER: "${DB_USERNAME}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
      POSTGRES_DB: "${DB_DATABASE}"
      TZ: "Asia/Tokyo"
    restart: always
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "${DB_EXTERNAL_PORT}:${DB_INTERNAL_PORT}"

  timescale:
    image: timescale/timescaledb:latest-pg11
    environment:
      POSTGRES_USER: "${TIMESCALE_DB_USERNAME}"
      POSTGRES_PASSWORD: "${TIMESCALE_DB_PASSWORD}"
    restart: always
    ports:
      - "${TIMESCALE_DB_EXTERNAL_PORT}:${TIMESCALE_DB_INTERNAL_PORT}"
    volumes:
      - ../.././internal/timescale/schema:/docker-entrypoint-initdb.d

  migration:
    build:
      context: ./docker/migration
    volumes:
      - ../../.:/go/src/github.com/inflion/inflion
    environment:
      DB_HOST: "${DB_HOST}"
      DB_DATABASE: "${DB_DATABASE}"
      DB_USERNAME: "${DB_USERNAME}"
      DB_PASSWORD: "${DB_PASSWORD}"
      DB_PORT: ${DB_INTERNAL_PORT}
    depends_on:
      - db

  nsqlookupd:
    image: nsqio/nsq
    command: /nsqlookupd
    restart: always
    ports:
      - "4160:4160"
      - "4161:4161"
  nsqd:
    image: nsqio/nsq
    command: /nsqd --lookupd-tcp-address=nsqlookupd:4160
    depends_on:
      - nsqlookupd
    restart: always
    ports:
      - "4150:4150"
      - "4151:4151"

  nsqadmin:
    image: nsqio/nsq
    command: /nsqadmin --lookupd-http-address=nsqlookupd:4161
    restart: always
    depends_on:
      - nsqlookupd
    ports:
      - "4171:4171"

  mailhog:
    image: mailhog/mailhog
    ports:
      - 1025:1025
      - 8025:8025

  etcd:
    image: bitnami/etcd:3.4.9
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
    ports:
      - 2379:2379
      - 2380:2380

volumes:
  db-data:
    driver: local


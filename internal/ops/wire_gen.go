// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package ops

import (
	"github.com/inflion/inflion/internal/ops/broker"
	store2 "github.com/inflion/inflion/internal/ops/flow/store"
	"github.com/inflion/inflion/internal/ops/monitor"
	"github.com/inflion/inflion/internal/ops/processor"
	"github.com/inflion/inflion/internal/ops/producer"
	"github.com/inflion/inflion/internal/ops/rule"
	"github.com/inflion/inflion/internal/ops/syncer"
	"github.com/inflion/inflion/internal/store"
	"github.com/inflion/inflion/internal/timescale"
)

// Injectors from wire.go:

func Initialize() (Ops, error) {
	dbtx, err := store.NewDbtx()
	if err != nil {
		return Ops{}, err
	}
	queries := store.New(dbtx)
	timescaleDBTX, err := timescale.NewDbtx()
	if err != nil {
		return Ops{}, err
	}
	timescaleQueries := timescale.New(timescaleDBTX)
	producerProducer := producer.NewProducer()
	monitorMonitor := monitor.NewMonitor(queries, timescaleQueries, producerProducer)
	consumer := broker.NewNsqConsumer()
	storeStore := store2.NewFlowStore()
	ruleStore := rule.NewRuleStore()
	eventMatcher := rule.NewEventMatcher(ruleStore)
	eventProcessor := processor.NewEventProcessor(storeStore, eventMatcher)
	brokerBroker := broker.NewBroker(consumer, eventProcessor)
	syncerSyncer := syncer.NewSyncer(queries)
	ops := newOps(monitorMonitor, brokerBroker, syncerSyncer)
	return ops, nil
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: event.proto

package eventpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PutEventRequest struct {
	Event                string   `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PutEventRequest) Reset()         { *m = PutEventRequest{} }
func (m *PutEventRequest) String() string { return proto.CompactTextString(m) }
func (*PutEventRequest) ProtoMessage()    {}
func (*PutEventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{0}
}

func (m *PutEventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutEventRequest.Unmarshal(m, b)
}
func (m *PutEventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutEventRequest.Marshal(b, m, deterministic)
}
func (m *PutEventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutEventRequest.Merge(m, src)
}
func (m *PutEventRequest) XXX_Size() int {
	return xxx_messageInfo_PutEventRequest.Size(m)
}
func (m *PutEventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PutEventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PutEventRequest proto.InternalMessageInfo

func (m *PutEventRequest) GetEvent() string {
	if m != nil {
		return m.Event
	}
	return ""
}

type PutEventResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PutEventResponse) Reset()         { *m = PutEventResponse{} }
func (m *PutEventResponse) String() string { return proto.CompactTextString(m) }
func (*PutEventResponse) ProtoMessage()    {}
func (*PutEventResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{1}
}

func (m *PutEventResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutEventResponse.Unmarshal(m, b)
}
func (m *PutEventResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutEventResponse.Marshal(b, m, deterministic)
}
func (m *PutEventResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutEventResponse.Merge(m, src)
}
func (m *PutEventResponse) XXX_Size() int {
	return xxx_messageInfo_PutEventResponse.Size(m)
}
func (m *PutEventResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PutEventResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PutEventResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*PutEventRequest)(nil), "inflion.inflionserver.event.v1.PutEventRequest")
	proto.RegisterType((*PutEventResponse)(nil), "inflion.inflionserver.event.v1.PutEventResponse")
}

func init() {
	proto.RegisterFile("event.proto", fileDescriptor_2d17a9d3f0ddf27e)
}

var fileDescriptor_2d17a9d3f0ddf27e = []byte{
	// 188 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4e, 0x2d, 0x4b, 0xcd,
	0x2b, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x92, 0xcb, 0xcc, 0x4b, 0xcb, 0xc9, 0xcc, 0xcf,
	0xd3, 0x83, 0xd2, 0xc5, 0xa9, 0x45, 0x65, 0xa9, 0x45, 0x7a, 0x10, 0x25, 0x65, 0x86, 0x52, 0x32,
	0xe9, 0xf9, 0xf9, 0xe9, 0x39, 0xa9, 0xfa, 0x89, 0x05, 0x99, 0xfa, 0x89, 0x79, 0x79, 0xf9, 0x25,
	0x89, 0x25, 0x20, 0x55, 0x10, 0xdd, 0x4a, 0xea, 0x5c, 0xfc, 0x01, 0xa5, 0x25, 0xae, 0x20, 0xc5,
	0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x42, 0x22, 0x5c, 0xac, 0x60, 0xcd, 0x12, 0x8c, 0x0a,
	0x8c, 0x1a, 0x9c, 0x41, 0x10, 0x8e, 0x92, 0x10, 0x97, 0x00, 0x42, 0x61, 0x71, 0x01, 0xc8, 0x1e,
	0xa3, 0x0e, 0x46, 0x2e, 0x56, 0xb0, 0x88, 0x50, 0x3d, 0x17, 0x73, 0x40, 0x69, 0x89, 0x90, 0xbe,
	0x1e, 0x7e, 0xc7, 0xe8, 0xa1, 0xd9, 0x25, 0x65, 0x40, 0xbc, 0x06, 0x88, 0x9d, 0x4a, 0xa2, 0x4d,
	0x97, 0x9f, 0x4c, 0x66, 0xe2, 0x57, 0xe2, 0xd2, 0x2f, 0x33, 0xd4, 0x07, 0x2b, 0x2b, 0xb6, 0x62,
	0xd4, 0x72, 0xe2, 0x8a, 0xe2, 0x80, 0xf0, 0x0a, 0x92, 0x92, 0xd8, 0xc0, 0x5e, 0x33, 0x06, 0x04,
	0x00, 0x00, 0xff, 0xff, 0x7b, 0xf3, 0x59, 0xda, 0x27, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// EventClient is the client API for Event service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EventClient interface {
	Put(ctx context.Context, in *PutEventRequest, opts ...grpc.CallOption) (*PutEventResponse, error)
}

type eventClient struct {
	cc grpc.ClientConnInterface
}

func NewEventClient(cc grpc.ClientConnInterface) EventClient {
	return &eventClient{cc}
}

func (c *eventClient) Put(ctx context.Context, in *PutEventRequest, opts ...grpc.CallOption) (*PutEventResponse, error) {
	out := new(PutEventResponse)
	err := c.cc.Invoke(ctx, "/inflion.inflionserver.event.v1.Event/Put", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EventServer is the server API for Event service.
type EventServer interface {
	Put(context.Context, *PutEventRequest) (*PutEventResponse, error)
}

// UnimplementedEventServer can be embedded to have forward compatible implementations.
type UnimplementedEventServer struct {
}

func (*UnimplementedEventServer) Put(ctx context.Context, req *PutEventRequest) (*PutEventResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Put not implemented")
}

func RegisterEventServer(s *grpc.Server, srv EventServer) {
	s.RegisterService(&_Event_serviceDesc, srv)
}

func _Event_Put_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServer).Put(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inflion.inflionserver.event.v1.Event/Put",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServer).Put(ctx, req.(*PutEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Event_serviceDesc = grpc.ServiceDesc{
	ServiceName: "inflion.inflionserver.event.v1.Event",
	HandlerType: (*EventServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Put",
			Handler:    _Event_Put_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "event.proto",
}
